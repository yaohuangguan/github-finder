{"version":3,"sources":["context/github/GithubState.js","context/github/githubContext.js","context/github/githubReducer.js","context/types.js","context/alert/alertContext.js","context/alert/alertReducer.js","context/alert/AlertState.js","component/layout/Menu.js","component/layout/Alert.js","component/page/About.js","component/layout/Spinner.js","component/repos/Repoitem.js","component/repos/Repos.js","component/user/User.js","component/user/Search.js","component/user/Useritem.js","component/user/Users.js","component/page/Home.js","component/page/NotFound.js","App.js","index.js"],"names":["githubCliId","githubCliSecret","GithubContext","createContext","GithubReducer","state","action","type","Object","objectSpread","loading","user","payload","repos","users","process","GITHUB_CLIENT_ID","GITHUB_CLIENT_SECRET","GithubState","props","_useReducer","useReducer","_useReducer2","slicedToArray","dispatch","searchUser","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","text","res","wrap","_context","prev","next","setLoading","axios","get","concat","sent","console","log","REACT_APP_GITHUB_CLIENT_ID","data","items","stop","_x","apply","this","arguments","getUserRepos","_ref2","_callee2","username","_context2","_x2","getUser","_ref3","_callee3","_context3","_x3","react_default","createElement","github_githubContext","Provider","value","clearUsers","children","alertContext","alertReducer","AlertState","alert_alertContext","alert","setAlert","msg","setTimeout","Menu","icon","title","className","react_router_dom","to","defaultProps","Alert","useContext","AlertContext","About","Spinner","role","Repoitem","repo","href","html_url","name","prototype","PropTypes","object","isRequired","Repos","map","repos_Repoitem","key","id","array","User","match","githubContext","useEffect","params","login","avatar_url","location","bio","blog","followers","following","hireable","company","public_repos","public_gists","layout_Spinner","Fragment","src","style","width","alt","target","repos_Repos","Search","_useState","useState","_useState2","settext","onSubmit","e","preventDefault","onChange","plac","eholder","length","onClick","Useritem","_props$user","Users","user_Useritem","Home","user_Search","user_Users","NotFound","App","github_GithubState","alert_AlertState","layout_Menu","layout_Alert","react_router","exact","path","component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.c3fc4e38.chunk.js","sourcesContent":["import React, { useReducer } from \"react\";\nimport axios from \"axios\";\nimport GithubContext from \"./githubContext\";\nimport GithubReducer from \"./githubReducer\";\n\nimport {\n  SEARCH_USERS,\n  SET_LOADING,\n  CLEAR_USERS,\n  GET_USER,\n  GET_REPOS,\n} from \"../types\";\n\nlet githubCliId;\nlet githubCliSecret;\n\nif(process.env.NODE_ENV !== 'production'){\n  githubCliId = process.env.REACT_APP_GITHUB_CLIENT_ID;\n  githubCliSecret = process.env.REACT_APP_GITHUB_CLIENT_SECRET\n} else{\n  githubCliId = process.env.GITHUB_CLIENT_ID;\n  githubCliSecret = process.env.GITHUB_CLIENT_SECRET\n}\n\nconst GithubState = props => {\n  const initialState = {\n    users: [],\n    user: {},\n    repos: [],\n    loading: false\n  };\n\n  const [state, dispatch] = useReducer(GithubReducer, initialState);\n\n  //Search User\n  const searchUser = async text => {\n    setLoading();\n    const res = await axios.get(\n      `https://api.github.com/search/users?q=${text}&client_id=${\n       githubCliId\n      }&client_secret=${githubCliSecret}`\n    );\n    console.log(process.env.REACT_APP_GITHUB_CLIENT_ID);\n\n    dispatch({\n      type: SEARCH_USERS,\n      payload: res.data.items\n    });\n        // if (res.data.items) {\n        //   alertContext.setAlert(\"success\", \"success\");\n        // }\n        // let responses = res.data.items;\n        // if (responses.length === 0) {\n        //   setAlert(\"There is no result matched!\", \"danger\");\n        // }\n  };\n\n  //Get user\n  const getUserRepos = async username => {\n    setLoading();\n    const res = await axios.get(\n      `https://api.github.com/users/${username}/repos?per_page=5&sort=created:asc&client_id=${\n      githubCliId\n      }&client_secret=${githubCliSecret}`\n    );\n    console.log(process.env.REACT_APP_GITHUB_CLIENT_ID);\n\n    dispatch({\n      type: GET_REPOS,\n      payload: res.data\n    });\n  };\n\n  // get single user profile\n  const getUser = async username => {\n    setLoading();\n    const res = await axios.get(\n      `https://api.github.com/users/${username}?client_id=${\n       githubCliId\n      }&client_secret=${githubCliSecret}`\n    );\n    console.log(process.env.REACT_APP_GITHUB_CLIENT_ID);\n\n    dispatch({\n      type: GET_USER,\n      payload: res.data\n    });\n  };\n\n  //get user repos\n\n  //clear user\n  const clearUsers = () => dispatch({ type: CLEAR_USERS });\n\n  //set loading\n  const setLoading = () =>\n    dispatch({\n      type: SET_LOADING\n    });\n  //\n\n  return (\n    <GithubContext.Provider\n      value={{\n        users: state.users,\n        user: state.user,\n        repos: state.repos,\n        loading: state.loading,\n        searchUser,\n        clearUsers,\n        getUser,\n        getUserRepos\n      }}\n    >\n      {props.children}\n    </GithubContext.Provider>\n  );\n};\n\nexport default GithubState;\n","import { createContext } from \"react\";\n\nconst GithubContext = createContext();\nexport default GithubContext;","import {\n  SEARCH_USERS,\n  SET_LOADING,\n  CLEAR_USERS,\n  GET_USERS,\n  GET_REPOS,\n  GET_USER\n} from \"../types\";\n\nconst GithubReducer = (state, action) => {\n  switch (action.type) {\n    case SET_LOADING:\n      return {\n        ...state,\n        loading: true\n      };\n    case GET_USER:\n      return {\n        ...state,\n        user: action.payload,\n        loading: false\n      };\n    case GET_REPOS:\n      return {\n        ...state,\n        repos: action.payload,\n        loading: false\n      };\n    case SEARCH_USERS:\n      return {\n        ...state,\n        users: action.payload,\n        loading: false\n      };\n    case CLEAR_USERS:\n      return {\n        ...state,\n        users: [],\n        loading: false\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default GithubReducer;\n","export const SEARCH_USERS='SEARCH_USERS';\nexport const GET_USER='GET_USER';\nexport const CLEAR_USERS='CLEAR_USERS';\nexport const GET_REPOS='GET_REPOS';\nexport const SET_LOADING='SET_LOADING';\nexport const SET_ALERT='SET_ALERT';\nexport const REMOVE_ALERT='REMOVE_ALERT';\n","import { createContext } from \"react\";\n\nconst alertContext = createContext();\nexport default alertContext;","import { SET_ALERT, REMOVE_ALERT } from \"../types\";\n\nexport default (state, action) => {\n  switch (action.type) {\n    case SET_ALERT:\n      return action.payload;\n\n    case REMOVE_ALERT:\n      return null;\n\n    default:\n      return state;\n  }\n};\n","import React, { useReducer } from \"react\";\nimport alertContext from \"./alertContext\";\nimport alertReducer from \"./alertReducer\";\nimport { SET_ALERT, REMOVE_ALERT } from \"../types\";\n\nconst AlertState = props => {\n  const initialState = null;\n\n  const [state, dispatch] = useReducer(alertReducer, initialState);\n\n  //alert while no input\n  const setAlert = (msg, type) => {\n    dispatch({\n      type: SET_ALERT,\n      payload: { msg, type }\n    });\n    setTimeout(() => dispatch({ type: REMOVE_ALERT }), 5000);\n  };\n\n  return (\n    <alertContext.Provider\n      value={{\n        alert: state,\n        setAlert\n      }}\n    >\n      {props.children}\n    </alertContext.Provider>\n  );\n};\n\nexport default AlertState;\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nfunction Menu ({icon,title}) {\n\n\n\n   \n          return (\n               <nav className=\"navbar bg-dark\">\n                <h2>\n                    <Link to=\"/\">\n                        \n                         <i className={icon}></i>\n                         {title}\n                        \n                    </Link>\n                    </h2>\n                    <ul>\n                         <li>\n                                   <Link to='/'>Home</Link>\n                         </li>\n                         <li>\n                              <Link to=\"/about\">About</Link>\n                         </li>\n                    </ul>\n               </nav>\n          )\n     \n}\nMenu.defaultProps = {\n     title:'Github Finder',\n     icon:'fab fa-github'\n}\n\nexport default Menu\n","import React from 'react'\nimport AlertContext from '../../context/alert/alertContext'\nimport {useContext} from 'react'\n\nconst Alert = ( {alert} ) => {\n     const alertContext = useContext(AlertContext)\n     return (\n         \n         alertContext.alert!==null && (\n              <div className={`alert alert-${alertContext.alert.type}`}>\n               <i className=\"fas fa-info-circle\"></i> {alertContext.alert.msg}\n              </div>\n         )\n     )\n}\n\nexport default Alert\n","import React from 'react'\n\nconst About = () => {\n     return (\n          <div>\n               <h1>hi this is abut page </h1>\n          </div>\n     )\n}\n\nexport default About\n","import React from 'react'\n\nconst Spinner = () => {\n     return (\n          <div>\n               <div className=\"spinner-border\" role=\"status\">\n  <span className=\"sr-only\"></span>\n</div>\n          </div>\n     )\n}\n\nexport default Spinner\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\n\nconst Repoitem = ({repo}) => {\n     return (\n          <div className=\"card\">\n               <h3>\n                    <a href={repo.html_url}>{repo.name}</a>\n               </h3>\n          </div>\n     )\n}\n\nRepoitem.prototype={\n     repo:PropTypes.object.isRequired,\n}\nexport default Repoitem\n","import React from 'react'\nimport Repoitem from './Repoitem'\nimport PropTypes from 'prop-types'\n\nconst Repos = ({repos}) => {\n     return repos.map(repo =><Repoitem repo={repo} key={repo.id} /> )\n}\n\nRepos.prototype={\n     repos:PropTypes.array.isRequired,\n}\nexport default Repos\n","import React, { useEffect, useContext } from \"react\";\nimport Spinner from \"../layout/Spinner\";\nimport { Link } from \"react-router-dom\";\nimport Repos from \"../repos/Repos\";\nimport GithubContext from \"../../context/github/githubContext\";\n\nconst User = ({ match }) => {\n  const githubContext = useContext(GithubContext);\n  const { user, getUser, loading, repos, getUserRepos } = githubContext;\n\n  useEffect(() => {\n    getUser(match.params.login);\n    getUserRepos(match.params.login);\n\n    //eslint-disable-next-line\n  }, []);\n\n  const {\n    name,\n    avatar_url,\n    location,\n    bio,\n    blog,\n    login,\n    html_url,\n    followers,\n    following,\n    hireable,\n    company,\n    public_repos,\n    public_gists\n  } = user;\n\n  if (loading)\n    return (\n      <div className='all-center'>\n        <Spinner />\n      </div>\n    );\n\n  return (\n    <>\n      <Link to='/' className='btn btn-light'>\n        Back to home\n      </Link>\n      <br />\n      Hireable:{\" \"}\n      {hireable ? (\n        <i className='fas fa-check text-success' />\n      ) : (\n        <i className='fas fa-times-circle text-danger' />\n      )}\n      <div className='card grid-2'>\n        <div className='all-center'>\n          <img\n            src={avatar_url}\n            className='round-img'\n            style={{ width: \"150px\" }}\n            alt=''\n          />\n\n          <h1>\n            {\" \"}\n            {\"\"}\n            {name ? name : <p>No Name Provided!</p>}\n          </h1>\n\n          <p>{location}</p>\n        </div>\n        <div>\n          {bio && (\n            <>\n              <h3>Bio</h3>\n              <p>{bio}</p>\n            </>\n          )}\n\n          <a href={html_url} className='btn btn-dark my-1' target='blank'>\n            Visit Github page\n          </a>\n          <ul>\n            <li>\n              {login && (\n                <>\n                  <strong>Username:</strong>\n                  {login}\n                </>\n              )}\n            </li>\n            <li>\n              {company && (\n                <>\n                  <strong>Company:</strong>\n                  {company}\n                </>\n              )}\n            </li>\n            <li>\n              {blog && (\n                <>\n                  <strong>Website:</strong>\n                  <a href={blog} target='blank'>\n                    {\" \"}\n                    {blog}\n                  </a>\n                </>\n              )}\n            </li>\n          </ul>\n        </div>\n      </div>\n      <div className='text-center'>\n        <div className='badge badge-primary'>Following:{following}</div>\n        <div className='badge badge-success'>Followers:{followers}</div>\n        <div className='badge badge-light'>public repos:{public_repos}</div>\n        <div className='badge badge-dark'>public gist:{public_gists}</div>\n      </div>\n      <Repos repos={repos} />\n    </>\n  );\n};\n\nexport default User;\n","import React, { useState, useContext } from \"react\";\n\nimport GithubContext from \"../../context/github/githubContext\";\nimport AlertContext from \"../../context/alert/alertContext\";\n\nfunction Search() {\n  const [text, settext] = useState(\"\");\n  const githubContext = useContext(GithubContext);\n  const alertContext = useContext(AlertContext);\n\n  const onChange = e => {\n    settext(e.target.value);\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    if (text === \"\") {\n      alertContext.setAlert(\"Please enter text\", \"danger\");\n    } else {\n      githubContext.searchUser(text);\n      settext(\"\");\n    }\n   \n  };\n\n  return (\n    <div>\n      <form action='' onSubmit={onSubmit} className='form'>\n        <input\n          type='text'\n          name='text'\n          value={text}\n          onChange={onChange}\n          plac\n          eholder='search'\n        />\n        <input\n          type='submit'\n          value='Search'\n          className='btn btn-dark btn-block'\n          id='spin'\n        />\n        {githubContext.users.length > 0 && (\n          <button\n            className='btn btn-light btn-block'\n            onClick={githubContext.clearUsers}\n          >\n            Clear\n          </button>\n        )}\n         </form>\n        \n     \n    </div>\n  );\n}\n\nexport default Search;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nconst Useritem = props => {\n  const { login, avatar_url, html_url } = props.user;\n\n  return (\n\n    <div className=\"col-md-4\">\n         <div className='card text-center'>\n           <div className='card-img'>\n             <img\n               src={avatar_url}\n               alt=''\n               className='round-img'\n               style={{ width: \"60px\" }}\n             />\n           </div>\n           <div className='card-body'>\n             <div className='card-title'>\n               <h3>{login}</h3>\n             </div>\n           </div>\n           <Link to={`/user/${login}`} className='btn btn-dark'>\n             User\n           </Link>\n           <a href={html_url} className='btn btn-dark' target='blank'>\n             More\n           </a>\n         </div>\n    </div>\n  );\n};\nUseritem.propTypes = {\n  user: PropTypes.object.isRequired\n};\n\nexport default Useritem;\n","import React from 'react'\nimport Useritem from './Useritem'\nimport Spinner from '../layout/Spinner'\n\nimport {useContext} from 'react'\nimport GithubContext from '../../context/github/githubContext'\nconst Users = () => {\n\n     const githubContext = useContext(GithubContext)\n     if(githubContext.loading){\n          return  (\n\n          <div className=\"all-center\">\n               <Spinner/>\n          </div>\n               \n               \n               )\n          \n\n     }\n     else{\n          return (\n               <>\n               <div className=\"row\">\n                   \n                         {githubContext.users.map(user => (\n                              <Useritem key={user.id} user={user} />))}\n                   \n               </div>\n               </>\n          )\n  \n     }\n    \n    \n         \n    \n}\n// const userStyle = {display:'grid',displayTemplateColumns:'repeat(3,1fr)',gridGap:'1rem'}\n\n\nexport default Users\n","import React from \"react\";\nimport Search from \"../user/Search\";\nimport Users from \"../user/Users\";\n\nconst Home = () => {\n  return (\n    <>\n      <Search />\n      <Users />\n    </>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\n\nconst NotFound = () => {\n  return (\n    <>\n      <h1>Not Found</h1>\n      <p>The page you are looking for does not exist</p>\n    </>\n  );\n};\n\nexport default NotFound;\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport GithubState from \"./context/github/GithubState\";\nimport AlertState from \"./context/alert/AlertState\";\nimport Menu from \"./component/layout/Menu\";\nimport Alert from \"./component/layout/Alert\";\nimport About from \"./component/page/About\";\nimport User from \"./component/user/User\";\nimport Home from \"./component/page/Home\";\nimport NotFound from \"./component/page/NotFound\";\nimport \"./App.css\";\nconst App = () => {\n  // async componentDidMount(){\n  //   console.log(process.env.REACT_APP_GITHUB_CLIENT_SECRET)\n  //   this.setState({loading:true})\n  //    const res = await axios.get(`https://api.github.com/users?client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`)\n  //   this.setState({users:res.data, loading:false})\n  // }\n\n  return (\n    <GithubState>\n      <AlertState>\n        <Router>\n          <>\n            <Menu title='Friend Finder' icon='fab fa-github' />\n\n            <div className='container'>\n              <Alert />\n              <h2 className=\"font-weight-bold\">Find your next friend</h2>\n              <Switch>\n                <Route exact path='/' component={Home} />\n                <Route exact path='/about' component={About} />\n                <Route exact path='/user/:login' component={User} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </>\n        </Router>\n      </AlertState>\n    </GithubState>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}